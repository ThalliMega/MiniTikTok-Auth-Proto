syntax = "proto3";

package mini_tiktok.proto.relation;
option go_package = "pb/relation";

message User {
    // 用户id
    uint32 id = 1;
    // 用户名称
    string name = 2;
    // 关注总数
    uint32 follow_count = 3;
    // 粉丝总数
    uint32 follower_count = 4;
    // true-已关注，false-未关注
    bool is_follow = 5;
}

message FollowActionRequest {
    // 0-关注，1-取消关注
    enum FollowActionType {
        FOLLOW = 0;
        UNFOLLOW = 1;
    }

    // 用户 
    uint32 id = 1;
    // 对方用户 id
    uint32 to_user_id = 2;
    // 关系操作码
    FollowActionType action_type = 3;
}

message FollowActionResponse {
    // 0-成功，非0-失败
    int32 status_code = 1;
    // 状态描述
    string status_msg = 2;
}


message ListFollowRequest {
    // 执行操作的用户 id
    uint32 id = 1;
    // 目标用户 id
    uint32 user_id = 2;
}

message ListFollowResponse {
    // 0-成功，非0-失败
    int32 status_code = 1;
    // 状态描述
    string status_msg = 2;
    // 用户信息列表
    repeated User user_list = 3;
}


message ListFansRequest {
    // 执行操作的用户 id
    uint32 id = 1;
    // 目标用户 id
    uint32 user_id = 2;
}

message ListFansResponse {
    // 0-成功，非0-失败
    int32 status_code = 1;
    // 状态描述
    string status_msg = 2;
    // 用户信息列表
    repeated User user_list = 3;
}


message ListFriendsRequest {
    // 执行操作的用户 id
    uint32 id = 1;
    // 目标用户 id
    uint32 user_id = 2;
}

message ListFriendsResponse {
    // 0-成功，非0-失败
    int32 status_code = 1;
    // 状态描述
    string status_msg = 2;
    // 用户信息列表
    repeated User user_list = 3;
}



service RelationService {
    // 对其他用户进行 关注/取关 操作
    rpc FollowAction (FollowActionRequest) returns (FollowActionResponse) {}
    // 获取用户关注列表
    rpc ListFollow (ListFollowRequest) returns (ListFollowResponse) {}
    // 获取用户粉丝列表
    rpc ListFans (ListFansRequest) returns (ListFansResponse) {}
    // 获取用户好友列表
    rpc ListFriends (ListFriendsRequest) returns (ListFriendsResponse) {}
}
